// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: internal/p2p/ProposeBlock.proto

package proposalpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Giao dịch trong block
type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        string                 `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver      string                 `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature     []byte                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Transaction) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Cấu trúc một block
type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Transactions  []*Transaction         `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	MerkleRoot    string                 `protobuf:"bytes,4,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	PrevHash      string                 `protobuf:"bytes,5,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	Nonce         int32                  `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Hash          string                 `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Block) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Block) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *Block) GetPrevHash() string {
	if x != nil {
		return x.PrevHash
	}
	return ""
}

func (x *Block) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Block) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// Request gửi proposal từ Leader
type ProposalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	LeaderID      string                 `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposalRequest) Reset() {
	*x = ProposalRequest{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalRequest) ProtoMessage() {}

func (x *ProposalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalRequest.ProtoReflect.Descriptor instead.
func (*ProposalRequest) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{2}
}

func (x *ProposalRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ProposalRequest) GetLeaderID() string {
	if x != nil {
		return x.LeaderID
	}
	return ""
}

// Response từ node Follower
type ProposalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Accepted      bool                   `protobuf:"varint,2,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposalResponse) Reset() {
	*x = ProposalResponse{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalResponse) ProtoMessage() {}

func (x *ProposalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalResponse.ProtoReflect.Descriptor instead.
func (*ProposalResponse) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{3}
}

func (x *ProposalResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProposalResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

// Request và response khi commit block
type CommitBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitBlockRequest) Reset() {
	*x = CommitBlockRequest{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitBlockRequest) ProtoMessage() {}

func (x *CommitBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitBlockRequest.ProtoReflect.Descriptor instead.
func (*CommitBlockRequest) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{4}
}

func (x *CommitBlockRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type CommitBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitBlockResponse) Reset() {
	*x = CommitBlockResponse{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitBlockResponse) ProtoMessage() {}

func (x *CommitBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitBlockResponse.ProtoReflect.Descriptor instead.
func (*CommitBlockResponse) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{5}
}

func (x *CommitBlockResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommitBlockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// --- Đồng bộ các block bị thiếu ---
type SyncBlocksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromHash      string                 `protobuf:"bytes,1,opt,name=fromHash,proto3" json:"fromHash,omitempty"` // Hash của block cuối cùng mà node đang có
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncBlocksRequest) Reset() {
	*x = SyncBlocksRequest{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncBlocksRequest) ProtoMessage() {}

func (x *SyncBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncBlocksRequest.ProtoReflect.Descriptor instead.
func (*SyncBlocksRequest) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{6}
}

func (x *SyncBlocksRequest) GetFromHash() string {
	if x != nil {
		return x.FromHash
	}
	return ""
}

type SyncBlocksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blocks        []*Block               `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncBlocksResponse) Reset() {
	*x = SyncBlocksResponse{}
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncBlocksResponse) ProtoMessage() {}

func (x *SyncBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_p2p_ProposeBlock_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncBlocksResponse.ProtoReflect.Descriptor instead.
func (*SyncBlocksResponse) Descriptor() ([]byte, []int) {
	return file_internal_p2p_ProposeBlock_proto_rawDescGZIP(), []int{7}
}

func (x *SyncBlocksResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

var File_internal_p2p_ProposeBlock_proto protoreflect.FileDescriptor

const file_internal_p2p_ProposeBlock_proto_rawDesc = "" +
	"\n" +
	"\x1finternal/p2p/ProposeBlock.proto\x12\bproposal\"\x95\x01\n" +
	"\vTransaction\x12\x16\n" +
	"\x06sender\x18\x01 \x01(\tR\x06sender\x12\x1a\n" +
	"\breceiver\x18\x02 \x01(\tR\breceiver\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\fR\tsignature\"\xdc\x01\n" +
	"\x05Block\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x129\n" +
	"\ftransactions\x18\x03 \x03(\v2\x15.proposal.TransactionR\ftransactions\x12\x1e\n" +
	"\n" +
	"merkleRoot\x18\x04 \x01(\tR\n" +
	"merkleRoot\x12\x1a\n" +
	"\bprevHash\x18\x05 \x01(\tR\bprevHash\x12\x14\n" +
	"\x05nonce\x18\x06 \x01(\x05R\x05nonce\x12\x12\n" +
	"\x04hash\x18\a \x01(\tR\x04hash\"T\n" +
	"\x0fProposalRequest\x12%\n" +
	"\x05block\x18\x01 \x01(\v2\x0f.proposal.BlockR\x05block\x12\x1a\n" +
	"\bleaderID\x18\x02 \x01(\tR\bleaderID\"H\n" +
	"\x10ProposalResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1a\n" +
	"\baccepted\x18\x02 \x01(\bR\baccepted\";\n" +
	"\x12CommitBlockRequest\x12%\n" +
	"\x05block\x18\x01 \x01(\v2\x0f.proposal.BlockR\x05block\"I\n" +
	"\x13CommitBlockResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"/\n" +
	"\x11SyncBlocksRequest\x12\x1a\n" +
	"\bfromHash\x18\x01 \x01(\tR\bfromHash\"=\n" +
	"\x12SyncBlocksResponse\x12'\n" +
	"\x06blocks\x18\x01 \x03(\v2\x0f.proposal.BlockR\x06blocks2\xf4\x01\n" +
	"\x0fProposalService\x12E\n" +
	"\fSendProposal\x12\x19.proposal.ProposalRequest\x1a\x1a.proposal.ProposalResponse\x12J\n" +
	"\vCommitBlock\x12\x1c.proposal.CommitBlockRequest\x1a\x1d.proposal.CommitBlockResponse\x12N\n" +
	"\x11SyncMissingBlocks\x12\x1b.proposal.SyncBlocksRequest\x1a\x1c.proposal.SyncBlocksResponseB\x17Z\x15blockchain/proposalpbb\x06proto3"

var (
	file_internal_p2p_ProposeBlock_proto_rawDescOnce sync.Once
	file_internal_p2p_ProposeBlock_proto_rawDescData []byte
)

func file_internal_p2p_ProposeBlock_proto_rawDescGZIP() []byte {
	file_internal_p2p_ProposeBlock_proto_rawDescOnce.Do(func() {
		file_internal_p2p_ProposeBlock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_p2p_ProposeBlock_proto_rawDesc), len(file_internal_p2p_ProposeBlock_proto_rawDesc)))
	})
	return file_internal_p2p_ProposeBlock_proto_rawDescData
}

var file_internal_p2p_ProposeBlock_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_internal_p2p_ProposeBlock_proto_goTypes = []any{
	(*Transaction)(nil),         // 0: proposal.Transaction
	(*Block)(nil),               // 1: proposal.Block
	(*ProposalRequest)(nil),     // 2: proposal.ProposalRequest
	(*ProposalResponse)(nil),    // 3: proposal.ProposalResponse
	(*CommitBlockRequest)(nil),  // 4: proposal.CommitBlockRequest
	(*CommitBlockResponse)(nil), // 5: proposal.CommitBlockResponse
	(*SyncBlocksRequest)(nil),   // 6: proposal.SyncBlocksRequest
	(*SyncBlocksResponse)(nil),  // 7: proposal.SyncBlocksResponse
}
var file_internal_p2p_ProposeBlock_proto_depIdxs = []int32{
	0, // 0: proposal.Block.transactions:type_name -> proposal.Transaction
	1, // 1: proposal.ProposalRequest.block:type_name -> proposal.Block
	1, // 2: proposal.CommitBlockRequest.block:type_name -> proposal.Block
	1, // 3: proposal.SyncBlocksResponse.blocks:type_name -> proposal.Block
	2, // 4: proposal.ProposalService.SendProposal:input_type -> proposal.ProposalRequest
	4, // 5: proposal.ProposalService.CommitBlock:input_type -> proposal.CommitBlockRequest
	6, // 6: proposal.ProposalService.SyncMissingBlocks:input_type -> proposal.SyncBlocksRequest
	3, // 7: proposal.ProposalService.SendProposal:output_type -> proposal.ProposalResponse
	5, // 8: proposal.ProposalService.CommitBlock:output_type -> proposal.CommitBlockResponse
	7, // 9: proposal.ProposalService.SyncMissingBlocks:output_type -> proposal.SyncBlocksResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_p2p_ProposeBlock_proto_init() }
func file_internal_p2p_ProposeBlock_proto_init() {
	if File_internal_p2p_ProposeBlock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_p2p_ProposeBlock_proto_rawDesc), len(file_internal_p2p_ProposeBlock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_p2p_ProposeBlock_proto_goTypes,
		DependencyIndexes: file_internal_p2p_ProposeBlock_proto_depIdxs,
		MessageInfos:      file_internal_p2p_ProposeBlock_proto_msgTypes,
	}.Build()
	File_internal_p2p_ProposeBlock_proto = out.File
	file_internal_p2p_ProposeBlock_proto_goTypes = nil
	file_internal_p2p_ProposeBlock_proto_depIdxs = nil
}
